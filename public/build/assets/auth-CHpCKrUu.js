const n=()=>{try{return localStorage.getItem("auth_token")}catch(t){return console.warn("Failed to get auth token:",t),null}},i=t=>{try{t?localStorage.setItem("auth_token",t):localStorage.removeItem("auth_token")}catch(e){console.warn("Failed to set auth token:",e)}},a=()=>{try{localStorage.removeItem("auth_token")}catch(t){console.warn("Failed to remove auth token:",t)}},h=()=>{const t=n();return!!(t&&t.trim().length>0)},c=()=>{const t=n();return t?{Authorization:`Bearer ${t}`,"Content-Type":"application/json",Accept:"application/json"}:{"Content-Type":"application/json",Accept:"application/json"}},d=async(t,e={})=>{const o={...c(),...e.headers};try{const r=await fetch(t,{...e,headers:o});return r.status===401&&a(),r}catch(r){throw console.error("Authenticated fetch failed:",r),r}},p=(t,e)=>{(t.status===401||t.message?.includes("401"))&&(a(),typeof e=="function"&&e())},s=t=>{if(!t||typeof t!="string")return!1;const e=t.split(".");return e.length===3&&e.every(o=>o.length>0)},u=t=>{try{if(!s(t))return null;const e=t.split(".")[1];return JSON.parse(atob(e))}catch(e){return console.warn("Failed to decode token:",e),null}},l=t=>{try{const e=u(t);return!e||!e.exp?!0:Math.floor(Date.now()/1e3)>=e.exp}catch(e){return console.warn("Failed to check token expiration:",e),!0}},f=async()=>{const t=n();return!t||l(t)?(a(),!1):!0},k={getAuthToken:n,setAuthToken:i,removeAuthToken:a,isAuthenticated:h,getAuthHeaders:c,authenticatedFetch:d,handleAuthError:p,isValidTokenFormat:s,getUserFromToken:u,isTokenExpired:l,refreshTokenIfNeeded:f};export{k as a,d as b,h as i};
